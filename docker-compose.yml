version: '3'
services:
  # 数据库
  breeze-mysql:
    build:
      context: ./db
    container_name: breeze-mysql
    hostname: breeze-mysql
    restart: always
    environment:
      MYSQL_ROOT_HOST: "%"
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - ./docker/mysql/conf/my.ini:/etc/mysql/my.ini
      - ./docker/mysql/conf.d:/etc/mysql/conf.d
      - ./docker/mysql/data/:/var/lib/mysql
      - ./docker/mysql/logs:/var/log/mysql
      - /etc/localtime:/etc/localtime:ro
    command:
      # 可以配置在mysql的 my.ini 中
      --max_connections=1024
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_general_ci
      --default-authentication-plugin=mysql_native_password
      --default-time_zone='+8:00'
    privileged: true
    networks:
      - breeze-net

  breeze-nacos:
    image: nacos/nacos-server:v2.2.0
    container_name: breeze-nacos
    hostname: breeze-nacos
    restart: always
    depends_on:
      - breeze-mysql
    environment:
      PREFER_HOST_MODE: hostname #如果支持主机名可以使用hostname,否则使用ip，默认也是ip
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: breeze-mysql
      MYSQL_SERVICE_DB_NAME: breeze_config
      MYSQL_SERVICE_DB_PARAM: "characterEncoding=utf8&connectTimeout=1000&socketTimeout=3000&autoReconnect=true&serverTimezone=UTC"
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: root
      JVM_XMS: 512m
      JVM_MMS: 320m
      TZ: Asia/Shanghai
    volumes:
      - ./docker/nacos/standalone-logs/:/home/nacos/logs
      - ./docker/nacos/plugins/:/home/nacos/plugins
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    expose:
      - "8848"
      - "9848"
      - "9849"
    privileged: true
    networks:
      - breeze-net

  # redis
  breeze-redis:
    image: redis
    container_name: breeze-redis
    hostname: breeze-redis
    restart: always
    ports:
      - "6379:6379"
    expose:
      - "6379"
    environment:
      TZ: Asia/Shanghai
    volumes:
      - ./docker/redis/conf/redis.conf:/etc/redis/redis.conf
      - ./docker/redis/data/:/data
      - ./docker/redis/logs/:/logs
      - /etc/localtime:/etc/localtime:ro
    command:
      redis-server /etc/redis/redis.conf
    privileged: true
    networks:
      - breeze-net

  breeze-minio:
    container_name: breeze-minio
    image: minio/minio
    hostname: breeze-minio
    ports:
      - "9092:9092" # api端口
      - "9091:9091" # 控制台端口
    environment:
      MINIO_ACCESS_KEY: admin     #管理平台用户名
      MINIO_SECRET_KEY: 12345678    #管理平台密码
      TZ: Asia/Shanghai
    volumes:
      - ./docker/minio/data:/data
      - ./docker/minio/config:/root/.minio/
      - /etc/localtime:/etc/localtime:ro
    command: server --console-address ':9091' --address ':9092' /data  #指定容器中的目录 /data
    privileged: true
    restart: always
    networks:
      - breeze-net

  breeze-auth-server:
    build:
      context: ./breeze-auth-server
    restart: always
    container_name: breeze-auth-server
    ports:
      - "8000:8000"
    volumes:
      - ./docker/logs:/usr/local/cloud/logs
      - /etc/localtime:/etc/localtime:ro
    hostname: breeze-auth-server
    image: breeze-auth-server
    networks:
      - breeze-net

  breeze-system-server:
    build:
      context: ./breeze-system/breeze-system-server
    restart: always
    container_name: breeze-system-server
    ports:
      - "7000:7000"
    volumes:
      - ./docker/logs:/usr/local/cloud/logs
      - /etc/localtime:/etc/localtime:ro
    hostname: breeze-system-server
    image: breeze-system-server
    networks:
      - breeze-net

  breeze-flowable-server:
    build:
      context: ./breeze-flow/breeze-flow-server
    restart: always
    container_name: breeze-flowable-server
    ports:
      - "4000:4000"
    volumes:
      - ./docker/logs:/usr/local/cloud/logs
      - /etc/localtime:/etc/localtime:ro
    hostname: breeze-flowable-server
    image: breeze-flowable-server
    networks:
      - breeze-net

  breeze-gateway-server:
    build:
      context: ./breeze-gateway-server
    restart: always
    container_name: breeze-gateway-server
    ports:
      - "9000:9000"
    volumes:
      - ./docker/logs:/usr/local/cloud/logs
      - /etc/localtime:/etc/localtime:ro
    hostname: breeze-gateway-server
    image: breeze-gateway-server
    networks:
      - breeze-net

  breeze-quartz-server:
    build:
      context: ./breeze-quartz-server
    restart: always
    container_name: breeze-quartz-server
    ports:
      - "5000:5000"
    volumes:
      - ./docker/logs:/usr/local/cloud/logs
      - /etc/localtime:/etc/localtime:ro
    hostname: breeze-quartz-server
    image: breeze-quartz-server
    networks:
      - breeze-net

  breeze-monitor-server:
    build:
      context: ./breeze-monitor-server
    restart: always
    ports:
      - "10000:10000"
    volumes:
      - ./docker/logs:/usr/local/cloud/logs
      - /etc/localtime:/etc/localtime:ro
    container_name: breeze-monitor-server
    hostname: breeze-monitor-server
    image: breeze-monitor-server
    networks:
      - breeze-net

networks:
  breeze-net:
    # 如果要创建外部隔离的覆盖网络，您可以将此internal选项设置为true
    external: false
